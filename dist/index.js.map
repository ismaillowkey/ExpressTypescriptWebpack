{"version":3,"sources":["webpack://express-typescript-webpack/external \"http\"","webpack://express-typescript-webpack/external \"require(\\\"express\\\")\"","webpack://express-typescript-webpack/webpack/bootstrap","webpack://express-typescript-webpack/./src/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,kC;;;;;;;;;;ACAA,oC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gBAAgB,mBAAO,CAAC,wBAAS;AACjC,aAAa,mBAAO,CAAC,kBAAM;AAC3B;AACA;AACA,0BAA0B,eAAe;AACzC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C,CAAC","file":"index.js","sourcesContent":["module.exports = require(\"http\");;","module.exports = require(\"express\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst express = require(\"express\");\r\nconst http = require(\"http\");\r\nvar app = express();\r\napp.get('/', (req, res) => {\r\n    res.status(200).json({ status: \"ok\" });\r\n});\r\nlet httpPort = 3000;\r\napp.set(\"port\", httpPort);\r\nvar httpServer = http.createServer(app);\r\n//listen on provided ports\r\nhttpServer.listen(httpPort, () => {\r\n    console.log(`Listening on port ${httpPort}`);\r\n});\r\n"],"sourceRoot":""}